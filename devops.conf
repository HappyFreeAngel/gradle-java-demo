
#需要人工指定或采用默认配置的参数
#app 编译参数
export PROJECT_NAME=""     #项目名称
export PROJECT_VERSION=""  #项目版本
export DEFAULT_APP_PROGRAM_LANGUAGE="java" #缺省的编程语言 java,scala,kotlin,nodejs,go,
export DEFAULT_APP_PORT=80  #-p
export DEFAULT_APP_HEALTH_CHECK_PATH="/"  #-c
export INIT_FOLDER_AS_GIT_FOLDER="yes" #-g
export DEPLOY_TYPE="test"  #test,develop,product #-t
export DEFAULT_APP_PORT_ID_IN_ENV="SERVER_PORT" #SERVER_PORT 用于Springboot 架构, PORT 用于nodejs 架构
export DEFAULT_DOCKER_IMAGE=""  #不同的变成语言使用不同的镜像,相同的编程语言不同的语言版本也可以使用不同的镜像.
export APP_INSTANCE_NUMBER=1

#获取部署平台 mesos+marathon平台的信息.
#容器云平台缺省环境变量 mesos+marathon
export DEFAULT_DNS_HOST="10.2.1.31"
export MARATHON_LEADER=""
export MARATHON_HTTP_PORT=8080
export MARATHON_HOST_LIST="10.2.1.71,10.2.1.72,10.2.1.73"

#数据仓库 gitlab 缺省环境变量
export GITLAB_HOST="gitlab.devops.marathon.mesos"
#export GITLAB_HOST="11.23.254.235"
export GITLAB_HTTP_PORT=80
export GITLAB_HTTPS_PORT=443
#export GITLAB_USER="root"
export GITLAB_USER="linyingjie"
#export PRIVATE_TOKEN="MSytGozhYzFwUKWnEJGX" #mesos 的gitlab 2019.03.26
export PRIVATE_TOKEN="mvvpS1hqxanGWFVCy6Dz"
#export PRIVATE_TOKEN="2Ha-M7xzSh6RRzc_RNZR"  #root token
export GITLAB_USER_EMAIL="robot@ascs.tech"

#jenkins 集群信息
export JENKINS_PROTOCOL="http"
export JENKINS_HOSTNAME="jenkins.devops.marathon.mesos"
export JENKINS_PORT=8080
export JENKINS_USER_NAME="jenkins"
export JENKINS_USER_TOKEN="1194cdec3d922c2ae7d77c2d62e2dc2e00"

export ANSIBLE_FOLDER_NAME_IN_JENKINS="ansible2.6.10"

#配置文件信息   部署的下载机器,这个不是最终运行的机器.
export YOUR_DOWNLOAD_HOST_SSH_PORT=22
export YOUR_DOWNLOAD_HOST_USERNAME="root"
export YOUR_DOWNLOAD_HOST_PASSWORD="kaixin.com"

#Mesos-agent 上的磁盘
export DOWNLOAD_HOST_DATA_FULL_PATH="/var/server/mesos/appdata/download-data"
#如果是CEPH 可以设置  /var/lib/rexray/volumes/download-data/data


#"配置文件覆盖优先级顺序:项目根目录>builder根目录>build.sh默认参数"

#代码覆盖率
export COVEREDRATIO=0.5  #取值范围0.0---1.0

#缺省镜像名称
export COMMON_DOCKER_IMAGE_FOR_JAVA8="common-docker-starter:openjdk-8u191-alpine3.8-support-ssh-login-1.0.0"
export COMMON_DOCKER_IMAGE_FOR_JAVA11="common-docker-starter:openjdk-11-jre-slim" #to do 服务器端需要部署
export COMMON_DOCKER_IMAGE_FOR_NODE="common-docker-starter-node:alpine-support-ssh-login-1.0.0"
export COMMON_DOCKER_IMAGE_FOR_PYTHON3="common-docker-starter:openjdk-8u191-alpine3.8-support-ssh-login-1.0.0"
export COMMON_DOCKER_IMAGE_FOR_GO=""
export COMMON_DOCKER_IMAGE_FOR_SCALA_2_12=""


